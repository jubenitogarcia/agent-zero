[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agent-zero"
version = "1.0.0"
description = "Agent Zero - Autonomous AI Agent Framework"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Agent Zero Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dependencies = [
    "docker==7.1.0",
    "a2wsgi==1.10.8",
    "ansio==0.0.1",
    "browser-use==0.2.5",
    "duckduckgo-search==6.1.12",
    "faiss-cpu==1.11.0",
    "fastmcp==2.3.4",
    "flask[async]==3.0.3",
    "flask-basicauth==0.2.0",
    "flaredantic==0.1.4",
    "GitPython==3.1.43",
    "inputimeout==1.0.4",
    "kokoro>=0.9.2",
    "simpleeval==1.0.3",
    "langchain-core==0.3.49",
    "langchain-community==0.3.19",
    "langchain-unstructured[all-docs]==0.1.6",
    "openai-whisper==20240930",
    "lxml_html_clean==0.3.1",
    "markdown==3.7",
    "mcp==1.9.0",
    "newspaper3k==0.2.8",
    "paramiko==3.5.0",
    "playwright==1.52.0",
    "pypdf==6.0.0",
    "python-dotenv==1.1.0",
    "pytz==2024.2",
    "sentence-transformers==3.0.1",
    "tiktoken==0.8.0",
    "unstructured[all-docs]==0.16.23",
    "unstructured-client==0.31.0",
    "webcolors==24.6.0",
    "nest-asyncio==1.6.0",
    "crontab==1.0.1",
    "litellm==1.74",
    "markdownify==1.1.0",
    "pymupdf==1.25.3",
    "pytesseract==0.3.13",
    "pdf2image==1.17.0",
    "pathspec>=0.12.1",
    "psutil>=7.0.0",
    "soundfile==0.13.1",
    "fastapi",
    "uvicorn",
    "httpx",
    "redis==6.4.0",
    "prometheus-client==0.22.1",
    # BroadHub dependencies
    "google-auth>=2.0.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.2.0",
    "google-api-python-client>=2.0.0",
    "requests>=2.28.0",
    "urllib3>=1.26.0",
    "Pillow>=9.0.0",
    "python-dateutil>=2.8.0",
    "cloudinary",
    "six",
    "certifi",
    "pandas>=1.5.0",
    "openpyxl>=3.0.0",
    "xlrd>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.3.2",
    "pytest-cov",
    "pytest-asyncio",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.scripts]
agent-zero = "agent:main"
agent-zero-ui = "run_ui:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["python*", "agents*"]
exclude = ["tests*", "docs*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | node_modules
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["python", "agents"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# mypy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "node_modules",
    "build",
    "dist",
]

# Coverage configuration
[tool.coverage.run]
source = ["python", "agents"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/node_modules/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]