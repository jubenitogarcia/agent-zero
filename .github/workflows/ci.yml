name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Changed files detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.changes.outputs.python }}
      javascript: ${{ steps.changes.outputs.javascript }}
      configs: ${{ steps.changes.outputs.configs }}
      docs: ${{ steps.changes.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            python:
              - 'python/**'
              - 'agents/**'
              - 'tests/**'
              - 'requirements.txt'
              - 'pyproject.toml'
              - 'constraints.txt'
            javascript:
              - 'webui/**'
              - 'apps/**'
              - 'packages/**'
              - 'package.json'
              - 'package-lock.json'
              - 'nx.json'
              - 'tsconfig.json'
            configs:
              - '.github/workflows/**'
              - 'eslint.config.js'
              - '.prettierrc.js'
              - 'Makefile'
              - 'tools/**'
            docs:
              - 'docs/**'
              - 'README.md'
              - '*.md'

  # Lint and format checks
  lint:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.javascript == 'true' || needs.changes.outputs.configs == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Check Prettier formatting
        run: npm run format:check

  # Python lint and format
  python-lint:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.python == 'true' || needs.changes.outputs.configs == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          pip install -e ".[dev]"
          
      - name: Run flake8
        run: flake8 python/ agents/ tests/ --max-line-length=88 --extend-ignore=E203,W503
        
      - name: Check black formatting
        run: black --check python/ agents/ tests/
        
      - name: Check isort
        run: isort --check-only python/ agents/ tests/

  # Build and verify
  build:
    runs-on: ubuntu-latest
    needs: [lint, python-lint]
    if: always() && (needs.lint.result == 'success' || needs.lint.result == 'skipped') && (needs.python-lint.result == 'success' || needs.python-lint.result == 'skipped')
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          npm ci
          pip install -e ".[dev]"
          
      - name: Build packages
        run: |
          npm run build
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            apps/*/dist/
            packages/*/dist/